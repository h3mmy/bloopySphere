---
- name: Install network tools
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: true
  loop:
    - arptables
    - ebtables
    - iputils-ping
    - ipvsadm
    - net-tools

- name: Set hostname to inventory hostname
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"
  when:
    - ansible_hostname != inventory_hostname

- name: Update /etc/hosts to include hostname
  ansible.builtin.blockinfile:
    path: /etc/hosts
    mode: 0644
    create: true
    block: |
      127.0.0.1 localhost
      127.0.1.1 {{ inventory_hostname }}
      # The following lines are desirable for IPv6 capable hosts
      ::1 ip6-localhost ip6-loopback
      fe00::0 ip6-localnet
      ff00::0 ip6-mcastprefix
      ff02::1 ip6-allnodes
      ff02::2 ip6-allrouters
      ff02::3 ip6-allhosts

- name: Check for bridge-nf-call-iptables
  ansible.builtin.stat:
    path: /proc/sys/net/bridge/bridge-nf-call-iptables
  register: bridge_nf_call_iptables_result

- name: Set system controls for Kubernetes
  ansible.posix.sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_file: /etc/sysctl.d/99-kubernetes.conf
    reload: true
  with_dict: "{{ sysctl_config }}"
  vars:
    sysctl_config:
      net.ipv4.ip_forward: 1
      net.ipv4.conf.all.forwarding: 1
      net.ipv6.conf.all.forwarding: 1
      net.bridge.bridge-nf-call-iptables: 1
      net.bridge.bridge-nf-call-ip6tables: 1
      net.ipv4.conf.default.rp_filter: 0
      net.ipv4.conf.all.rp_filter: 0

- name: Set Kubernetes network configuration
  ansible.builtin.blockinfile:
    path: /etc/sysctl.d/99-kubernetes-cri.conf
    mode: 0644
    create: true
    block: |
      net.ipv4.conf.all.forwarding = 1
      net.ipv4.conf.all.rp_filter = 0
      net.ipv4.conf.default.rp_filter = 0
      net.ipv6.conf.all.forwarding = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1
  when:
    - bridge_nf_call_iptables_result.stat.exists
  register: sysctl_network
