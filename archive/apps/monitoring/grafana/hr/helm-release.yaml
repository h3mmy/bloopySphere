---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 7.3.11
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system

  install:
    remediation:
      retries: 7
  upgrade:
    remediation:
      retries: 7

  values:
    replicas: 1

    rbac:
      pspEnabled: false

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"

    persistence:
      enabled: false
      inMemory:
        enabled: true
      # storageClassName: "nfs-client"
      # size: 10Gi
      # accessModes:
      #   - ReadWriteOnce

    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "panodata-map-panel"
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
      VAR_BLOCKY_URL: "http://blocky.networking.svc.cluster.local:4000"
      DS_PROMETHEUS: "prometheus"
    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    grafana.ini:
      server:
        root_url: "https://grafana.${XYZ_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      panels:
        disable_sanitize_html: true
      auth:
        signout_redirect_url: https://auth.${XYZ_DOMAIN}/application/o/grafana/end-session/
      auth.basic:
        disable_login_form: true
      auth.jwt:
        enabled: true
        jwk_set_url: https://auth.${XYZ_DOMAIN}/application/o/grafana-bloopnet/jwks/
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
      auth.generic_oauth:
        enabled: true
        name: ${CLUSTER_NAME}
        client_id: "${GRAFANA_OAUTH_CLIENT_ID}"
        client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        scopes: "openid email profile"
        auth_url: https://auth.${XYZ_DOMAIN}/application/o/authorize/
        token_url: https://auth.${XYZ_DOMAIN}/application/o/token/
        api_url: https://auth.${XYZ_DOMAIN}/application/o/userinfo/
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default
          - name: "flux"
            orgId: 1
            folder: "flux"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/flux
          - name: "loki"
            orgId: 1
            folder: "loki"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/loki
          - name: "media"
            orgId: 1
            folder: "media"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/media
          - name: "networking"
            orgId: 1
            folder: "networking"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/networking
          - name: "power"
            orgId: 1
            folder: "power"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/power
          - name: "storage"
            orgId: 1
            folder: "storage"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/storage
          - name: "thanos"
            orgId: 1
            folder: "thanos"
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/thanos
          - name: users
            orgId: 1
            folder: users
            type: file
            updateIntervalSeconds: 10
            disableDeletion: false
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/users
    datasources:
      # Schema: https://grafana.com/docs/grafana/latest/administration/provisioning/#datasources
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
          - name: Alertmanager
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query.monitoring.svc.cluster.local:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki-gateway.monitoring.svc.cluster.local:80
          - name: Promeheus-Direct
            type: prometheus
            access: proxy
            url: http://prometheus-prometheus.monitoring.svc.cluster.local:9090
          - name: &blockydb Blocky-QueryDB
            type: postgres
            url: blocky-postgres.networking.svc.cluster.local:5432
            database: ${BLOCKY_QUERY_DB_NAME}
            user: blocky
            jsonData:
              # SSLmode. 'disable', 'require', 'verify-ca' or 'verify-full'
              sslmode: disable
            secureJsonData:
              password: ${BLOCKY_QUERY_DB_PASSWORD}
          - name: MariaDB Hass
            type: mysql
            url: ${MARIADB_ADDRESS}:3306
            database: hadb
            user: ${MARIADB_GRAFANA_USER}
            secureJsonData:
              password: ${MARIADB_GRAFANA_PASSWORD}
          - name: AlertManager
            type: alertmanager
            access: proxy
            url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: "prometheus"

    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/17446
        emqx:
          gnetId: 17446
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/12175
        calico-felix:
          gnetId: 12175
          revision: 5
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          gnetId: 15762
          revision: 13
          # url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
      storage:
        # Ref: https://grafana.com/grafana/dashboards/763-redis-dashboard-for-prometheus-redis-exporter-1-x/
        redis:
          gnetId: 763
          revision: 5
          datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/2842
        # ceph-cluster:
        #   gnetId: 2842
        #   revision: 14
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/5336
        # ceph-osd:
        #   gnetId: 5336
        #   revision: 5
        #   datasource: Prometheus
        # # Ref: https://grafana.com/grafana/dashboards/5342
        # ceph-pools:
        #   gnetId: 5342
        #   revision: 5
        #   datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 23
          datasource: Prometheus
        # flux-cluster:
        #   url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
        #   datasource: Prometheus
        # flux-control-plane:
        #   url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
        #   datasource: Prometheus
      networking:
        # blocky-query:
        #   gnetId: 17996
        #   revision: 11
        #   datasource: *blockydb
        blocky-query-2:
          #url: https://raw.githubusercontent.com/shizunge/blocky-postgresql-dashboard/main/Blocky-Postgres.json
          url: https://raw.githubusercontent.com/0xERR0R/blocky/main/docs/blocky-query-grafana-postgres.json
          datasource: *blockydb
        # Ref: https://grafana.com/grafana/dashboards/15513
        # cert-manager:
        #   url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
        #   datasource: Prometheus
        metallb:
          url: https://raw.githubusercontent.com/jr0dd/grafana-dashboards/main/metallb.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 10
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11310-unifi-poller-client-dpi-prometheus/
        unifi-dpi:
          gnetId: 11310
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11313-unifi-poller-usg-insights-prometheus/
        unifi-usg-insights:
          gnetId: 11313
          revision: 9
          datasource: Prometheus
      media:
        lidarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/lidarr.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        # qbittorrent:
        #   url: https://raw.githubusercontent.com/esanchezm/prometheus-qbittorrent-exporter/master/grafana/dashboard.json
        #   datasource: Prometheus
      users:
        # Ref: https://grafana.com/grafana/dashboards/14837
        authentik:
          gnetId: 14837
          revision: 2
          datasource: Prometheus
    imageRenderer:
      enabled: true
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        multicluster: true
        provider:
          foldersFromFilesStructure: true
          allowUiUpdates: true
          disableDelete: false
      datasources:
        enabled: true
        searchNamespace: ALL
        label: grafana_datasource

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - grafana-polystat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel

    serviceMonitor:
      enabled: true

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        hajimari.io/instance: "bloop-quarky"
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-bar-stacked"
        hajimari.io/appName: "Status"
        external-dns.alpha.kubernetes.io/hostname: ipv4.${XYZ_DOMAIN}
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - "grafana.${XYZ_DOMAIN}"
      tls:
        - secretName: tls.grafana
          hosts:
            - "grafana.${XYZ_DOMAIN}"

    serviceAccount:
      create: true
      autoMount: true
