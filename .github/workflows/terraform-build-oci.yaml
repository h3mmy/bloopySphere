---
name: "Terraform: Build OCI artifacts"

on: # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "infrastructure/terraform/**"

env:
  IMAGE_REGISTRY: ghcr.io

jobs:
  changed-files:
    name: Generate Build Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        id: generate-token
        with:
          app_id: "${{ secrets.APP_ID }}"
          private_key: "${{ secrets.APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@3f54ebb830831fc121d3263c1857cfbdc310cdb9 # v42.0.4
        with:
          dir_names: true
          dir_names_max_depth: 3
          json: true
          files: |
            infrastructure/terraform/**

      - name: List all changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo $ALL_CHANGED_FILES

      - name: Store changed projects
        id: set-matrix
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          if [[ "${ALL_CHANGED_FILES}" == "[]" ]]; then
            echo "matrix={\"project\":$(find infrastructure/terraform -type d -mindepth 1 -maxdepth 1 | jo -a)}" >> "${GITHUB_OUTPUT}"
          else
            echo "matrix={\"project\":${ALL_CHANGED_FILES}}" >> "${GITHUB_OUTPUT}"
          fi
  publish:
    name: Publish OCI
    runs-on: ubuntu-latest
    permissions:
      packages: write
      id-token: write
    needs: [changed-files]
    strategy:
      matrix: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@3beb63f4bd073e61482598c45c71c1019b59b73a # v2.1.0
        id: generate-token
        with:
          app_id: "${{ secrets.APP_ID }}"
          private_key: "${{ secrets.APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.generate-token.outputs.token }}"

      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Setup Tools
        run: |
          brew install cosign fluxcd/tap/flux
      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate OCI tag
        id: generate-tag
        run: echo "tag=${{ env.IMAGE_REGISTRY }}/${{ github.repository_owner }}/terraform-$(basename ${{ matrix.project }}):$(git rev-parse --short HEAD)" >> "${GITHUB_OUTPUT}"

      - name: Publish OCI
        run: |
          flux push artifact oci://${{ steps.generate-tag.outputs.tag }} \
              --path="./${{ matrix.project }}" \
              --source="$(git config --get remote.origin.url)" \
              --revision="$(git branch --show-current)/$(git rev-parse HEAD)"

      - name: Tag OCI
        run: flux tag artifact oci://${{ steps.generate-tag.outputs.tag }} --tag main
