{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    ":dependencyDashboard",
    ":enablePreCommit",
    ":disableRateLimiting",
    ":separatePatchReleases",
    ":autodetectPinVersions",
    ":rebaseStalePrs",
    ":automergePatch",
    ":gomod",
    "docker:enableMajor",
    "github>h3mmy/bloopysphere//.github/renovate/allowedVersions.json5",
    "github>h3mmy/bloopysphere//.github/renovate/commitMessage",
    "github>h3mmy/bloopysphere//.github/renovate/autoMerge.json5",
    "github>h3mmy/bloopysphere//.github/renovate/labels.json5",
    "github>h3mmy/bloopysphere//.github/renovate/groups.json5",
    "github>h3mmy/bloopysphere//.github/renovate/disabledDatasources.json5",
    "github>h3mmy/bloopysphere//.github/renovate/semanticCommits"
  ],
  "timezone": "America/Detroit",
  "dependencyDashboardTitle": "Renovate Dashboard",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",

  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],

  "helm-values": {
    "fileMatch": ["./.+\\.yaml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
      ],
    "ignorePaths": [
      "cluster/.+/gotk-components\\.ya?ml$"
    ]
  },
  "docker-compose": {
    "fileMatch": [
      "(^|\/)docker-compose.*\.ya?ml$",
      "(^|\/)docker-compose.*\.ya?ml\.j2$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helm-release\\.yaml$"
    ]
  },
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.yaml$"
    ]
  },
  "flux": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ]
  },
  "regexManagers": [
    // regexManager to read and process HelmRelease files
    {
      "fileMatch": ["./.+\\.yaml$"],
      "matchStrings": [
        // helm releases
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "description": ["Raw GitHub URL Regex manager"],
      "fileMatch": [
        "infrastructure/.+\\.ya?ml$",
        "kubernetes/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "https:\\/\\/raw.githubusercontent.com\\/(?<depName>[\\w\\d\\-_]+\\/[\\w\\d\\-_]+)\\/(?<currentValue>[\\w\\d\\.\\-_]+)\\/.*",
      ],
      "datasourceTemplate": "github-releases",
      "versioningTemplate": "semver"
    },
    {
      "description": "Process CRD dependencies",
      "fileMatch": ["cluster/crds/.+\\.ya?ml$"],
      "matchStrings": [
        // GitRepository and Flux Kustomization where 'Git release/tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact URL' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    // regexManager to read and process Traefik CRD's
    {
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n",
      ],
      "datasourceTemplate": "helm"
    },
    {
      "description": "Process various other dependencies",
      "fileMatch": [
        "provision/ansible/.+\\.ya?ml$",
        "cluster/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    }
  ],
  "packageRules": [

    // Custom versions
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": ["blakeblackshear/frigate"]
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T.*Z(-(?<compatibility>.*))?$",
      "matchPackageNames": ["quay.io/minio/minio"]
    },
    {
      "matchDatasources": ["docker"],
      "versionScheme": "regex:^nightly-0\\.(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["hotio/readarr"]
    },
    {
      "matchDatasources": ["docker", "git-releases"],
      "versioning": "loose",
      "matchPackageNames": [
        "plexinc/pms-docker",
       "k8s-at-home/plex",
       "ghcr.io/onedr0p/plex",
      "ghcr.io/onedr0p/qbittorrent"
      ]
    },
    {
      "matchDatasources": [
        "github-releases",
        "docker"
      ],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller",
        "tigera-operator"
      ],
      "groupName": "external-snapshotter-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
