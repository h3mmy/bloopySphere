---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app ghost
  namespace: blogs
spec:
  interval: 11m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  dependsOn:
    - name: ghost-mysql
      namespace: blogs

  install:
    remediation:
      retries: 4
  upgrade:
    remediation:
      remediateLastFailure: true

  valuesFrom:
    - targetPath: controllers.main.containers.main.env.database__connection__password
      kind: Secret
      name: ghost-secrets
      valuesKey: rootPassword
    - targetPath: controllers.main.containers.main.env.database__connection__user
      kind: Secret
      name: ghost-secrets
      valuesKey: rootUser

  values:
    global:
      nameOverride: *app
    controllers:
      main:
        type: deployment
        containers:
          main:
            image:
              # Yes, this looks weird but it's part of the docker-library so this is valid
              # https://hub.docker.com/_/ghost
              repository: ghost
              # renovate: datasource=docker depName=ghost
              tag: "5.117.0"
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
              url: "https://${LILJ_DOMAIN}"
              admin__url: "https://tyg3r.${XYZ_DOMAIN}"
              database__client: mysql
              database__connection__host: ghost-mysql
              database__connection__database: ghost
              mail__transport: SMTP
              mail__from: ${MAIILGUN_LILJ_FROM_EMAIL}
              mail__options__service: Mailgun
              mail__options__host: smtp.mailgun.org
              mail__options__port: 465
              mail__options__secure: true
              mail__options__auth__user: postmaster@mg.${LILJ_DOMAIN}
              mail__options__auth__pass: ${MAILGUN_LILJ_SMTP_PASSWORD}
              # mail__api_key: ${MAILGUN_API_KEY}
    service:
      main:
        ports:
          http:
            port: &port 2368

    ingress:
      main:
        enabled: true
        className: traefik
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/icon: "ghost"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          cert-manager.io/uri-sans: &host3 www.${LILJ_DOMAIN}
          traefik.ingress.kubernetes.io/router.priority: "99"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-chain-no-auth-tgr@kubernetescrd"
        hosts:
          - host: &host2 ${LILJ_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port
          - host: *host3
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port
        tls:
          - hosts:
              - *host2
              - *host3
            secretName: tls.tyg3r-tgr
    persistence:
      content:
        enabled: true
        existingClaim: ghost-config-v1
        globalMounts:
          - path: /var/lib/ghost/content
            readOnly: false
