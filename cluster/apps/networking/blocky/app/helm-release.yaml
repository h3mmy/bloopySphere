---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app blocky
  namespace: networking
spec:
  interval: 11m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  install:
    crds: CreateReplace
    remediation:
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation:
      remediateLastFailure: true
      retries: 7

  dependsOn:
    - name: blocky-redis
      namespace: networking

  # valuesFrom:
  #   - name: blocky-config-values
  #     kind: ConfigMap
  #     valuesKey: config
  #     targetPath: config
  #     optional: false

  values:
    priorityClassName: network-cluster-critical

    controllers:
      main:
        type: deployment
        strategy: RollingUpdate
        replicas: 3
        pod:
          annotations:
            configmap.reloader.stakater.com/reload: blocky-config,blocky-whitelist
            secret.reloader.stakater.com/reload: tls.blocky
          affinity:
            nodeAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 80
                  preference:
                    matchExpressions:
                      - key: kubernetes.io/arch
                        operator: In
                        values:
                          - amd64
                          - i386
                          - i686
                          - x86
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - *app
                    topologyKey: kubernetes.io/hostname

          tolerations:
            - key: "kubernetes.io/arch"
              operator: "Equal"
              value: "arm64"
              effect: "NoSchedule"

        containers:
          main:
            image:
              repository: ghcr.io/0xerr0r/blocky
              tag: v0.26
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
            resources:
              requests:
                memory: 200Mi
                cpu: 50m
              limits:
                memory: 950Mi
                cpu: 1500m
            probes:
              startup:
                spec:
                  initialDelaySeconds: 30

    service:
      main:
        enabled: true
        ports:
          http:
            port: 4000
      dns:
        enabled: true
        type: LoadBalancer
        controller: main
        monitor:
          enabled: false
        # v1.24 will have loadBalancerIPs
        # see https://github.com/kubernetes/enhancements/pull/1992
        ports:
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 53
          dns-tls:
            enabled: true
            port: 853
            protocol: TCP
            targetPort: 853
          dns-https:
            enabled: true
            port: 443
            protocol: TCP
            targetPort: 443
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 53
        externalTrafficPolicy: Local
        loadBalancerIPs:
          - ${LB_V4_BLOCKY}
          - ${SVC_BLOCKY_ADDR_V6}
        ipFamilyPolicy: PreferDualStack
        ipFamilies:
          - "IPv4"
          - "IPv6"
        annotations:
          metallb.io/loadBalancerIPs: &lbs "${LB_V4_BLOCKY}, ${SVC_BLOCKY_ADDR_V6}"
          metallb.io/allow-shared-ip: *app
          coredns.io/hostname: &hostsvc "dns.${XYZ_DOMAIN}"

    ingress:
      main:
        enabled: true
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          cert-manager.io/ip-sans: *lbs
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: networking-rfc1918@kubernetescrd
        hosts:
          - host: &host blocky.${XYZ_DOMAIN}
            paths:
              - path: /dns-query
                pathType: Prefix
                service:
                  name: dns-https
                  port: 443
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: 4000
        tls:
          - secretName: tls.blocky
            hosts:
              - *host
              - *hostsvc
              - "*.dns.${XYZ_DOMAIN}"

    serviceMonitor:
      main:
        enabled: true
        serviceName: *app
        endpoints:
          - interval: 30s
            path: /metrics
            port: http
            scrapeTimeout: 10s

    persistence:
      config:
        enabled: true
        type: configMap
        name: &config blocky-config
        globalMounts:
          - path: /app/config.yml
            subPath: config.yml
      whitelists:
        enabled: true
        globalMounts:
          - path: /app/whitelists
        type: custom
        volumeSpec:
          configMap:
            name: blocky-whitelist
      certs:
        enabled: true
        type: secret
        name: tls.blocky
        readOnly: true
