---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: blocky
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: blocky
      version: 10.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  install:
    remediation:
      retries: 7
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 7

  values:

    image:
      repository: ghcr.io/0xerr0r/blocky
      tag: v0.18

    controller:
      enabled: true
      type: deployment
      strategy: RollingUpdate
      replicas: 2

    env:
      TZ: "${TZ}"

    autoscaling:
      enabled: true
      target: blocky
      minReplicas: 2
      maxReplicas: 4
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80

    service:
      main:
        enabled: true
        ports:
          http:
            port: 4000
      dns-tcp:
        enabled: true
        type: LoadBalancer
        # v1.24 will have loadBalancerIPs
        # see https://github.com/kubernetes/enhancements/pull/1992
        ports:
          dns-tcp:
            enabled: true
            port: 53
            protocol: TCP
            targetPort: 53
          dns-tls:
            enabled: true
            port: 853
            protocol: TCP
            targetPort: 853
          dns-https:
            enabled: true
            port: 443
            protocol: TCP
            targetPort: 443
        externalTrafficPolicy: Local
        ipFamilyPolicy: PreferDualStack
        ipFamilies:
          - "IPv4"
          - "IPv6"
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${SVC_BLOCKY_ADDR_V4}, ${SVC_BLOCKY_ADDR_V6}"
          metallb.universe.tf/allow-shared-ip: blocky
      dns-udp:
        enabled: true
        type: LoadBalancer
        # v1.24 will have loadBalancerIPs
        # see https://github.com/kubernetes/enhancements/pull/1992
        ports:
          dns-udp:
            enabled: true
            port: 53
            protocol: UDP
            targetPort: 53
        externalTrafficPolicy: Local
        ipFamilyPolicy: PreferDualStack
        ipFamilies:
          - "IPv4"
          - "IPv6"
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${SVC_BLOCKY_ADDR_V4}, ${SVC_BLOCKY_ADDR_V6}"
          metallb.universe.tf/allow-shared-ip: blocky

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          cert-manager.io/ip-sans: "${SVC_BLOCKY_ADDR_V4}, ${SVC_BLOCKY_ADDR_V6}"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure, dns-tls
          traefik.ingress.kubernetes.io/router.middlewares: networking-rfc1918@kubernetescrd

        hosts:
          - host: &host blocky.${XYZ_DOMAIN}
            paths:
              - path: /

        tls:
          - secretName: tls.blocky
            hosts:
              - *host

    metrics:
      enabled: true
      serviceMonitor:
        interval: 30s
        scrapeTimeout: 10s
      prometheusRule:
        enabled: true
    prometheus:
      serviceMonitor:
        enabled: true

    podAnnotations:
      configmap.reloader.stakater.com/reload: blocky-config
      secret.reloader.stakater.com/reload: tls.blocky

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - blocky
              topologyKey: kubernetes.io/hostname

    tolerations:
      - key: "arch"
        operator: "Equal"
        value: "arm64"
        effect: "NoSchedule"

    persistence:
      whitelists:
        enabled: true
        mountPath: /app/whitelists
        type: custom
        volumeSpec:
          configMap:
            name: blocky-whitelist
      certs:
        enabled: true
        type: secret
        name: tls.blocky

    probes:
      startup:
        spec:
          initialDelaySeconds: 30

    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 750Mi
        cpu: 1000m

    config: |
      upstream:
        default:
          # - tcp+udp:8.8.8.8
          # - tcp+udp:8.8.4.4
          # - tcp+udp:1.1.1.1
          - tcp-tls:one.one.one.one
          - tcp-tls:dns.google
          - https://cloudflare-dns.com/dns-query
      upstreamTimeout: 5
      bootstrapDns: 1.1.1.1:53
      conditional:
        mapping:
          # local: tcp+udp:kube-dns.svc
          unifi: tcp+udp:${LOCAL_GATEWAY_MAIN}
          ${XYZ_DOMAIN}: tcp+udp:${LB_V4_K8S_GATEWAY},tcp+udp:${LB_V6_K8S_GATEWAY}
          ${DOMAIN_BIG_BLOOP}: tcp+udp:${LOCAL_GATEWAY_BIG_BLOOP}
          ${DOMAIN_SMALL_BLOOP}: tcp+udp:${LOCAL_GATEWAY_SMALL_BLOOP}
          ${DOMAIN_CORE_BLOOP}: tcp+udp:${LOCAL_GATEWAY_CORE_BLOOP}
          status.${XYZ_DOMAIN}: tcp+udp:1.1.1.1
          tyg3r.${XYZ_DOMAIN}: tcp+udp:1.1.1.1
      customDNS:
        mapping:
          ${CLASSIC_DOMAIN}: ${NAS_ADDRESS},${LB_TRAEFIK_CLASSIC}
          ${SECRET_DOMAIN}: ${LB_V4_TRAEFIK},${LB_V6_TRAEFIK}
          emqx.${XYZ_DOMAIN}: ${LB_V4_TRAEFIK},${LB_V6_TRAEFIK}
          mqtt.${XYZ_DOMAIN}: ${LB_V4_TRAEFIK},${LB_V6_TRAEFIK}
          wss.${XYZ_DOMAIN}: ${LB_V4_TRAEFIK},${LB_V6_TRAEFIK}
      blocking:
        blockType: zeroIp
        failStartOnListError: true
        blackLists:
          ads:
            - https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
            - https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
            - http://sysctl.org/cameleon/hosts
            - https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
          special:
            - https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/fakenews-gambling-porn/hosts
          none:
        whiteLists:
          ads:
            - https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt
        clientGroupsBlock:
          default:
            - ads
          ${LOCAL_GATEWAY_SMALL_BLOOP}/24:
            - ads
            - special

      clientLookup:
        upstream: tcp+udp:${LOCAL_GATEWAY_MAIN}
        # optional: some routers return multiple names for client (host name and user defined name). Define which single name should be used.
        # Example: take second name if present, if not take first name
        singleNameOrder:
          - 2
          - 1
        # optional: custom mapping of client name to IP addresses. Useful if reverse DNS does not work properly or just to have custom client names.
        # clients:
        #   laptop:
        #     - 192.168.178.29
      caching:
        prefetching: true
      prometheus:
        enable: true
        path: /metrics
      httpPort: 4000
      httpsPort: 443
      tlsPort: 853
      certFile: /certs/tls.crt
      keyFile: /certs/tls.key
      logLevel: info
      queryLog:
        type: mysql
        target: ${MARIADB_BLOCKY_USER}:${MARIADB_BLOCKY_PASSWORD}@tcp(${MARIADB_ADDRESS}:3306)/${MARIADB_BLOCKY_DATABASE}?charset=utf8mb4&parseTime=True&loc=Local
        logRetentionDays: 7
