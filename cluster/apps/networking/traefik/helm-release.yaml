# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name traefik
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.traefik.io/traefik
      chart: *name
      version: 37.1.2
      sourceRef:
        kind: HelmRepository
        name: traefik-charts
        namespace: flux-system
  dependsOn:
    - name: cert-manager
      namespace: cert-manager
    - name: traefik-crds
      namespace: networking
  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    remediation:
      retries: 3
  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace
  test:
    enable: true
  rollback:
    recreate: true
    force: true
    cleanupOnFail: true
  uninstall:
    keepHistory: false
  driftDetection:
    mode: enabled
    ignore:
     - paths: ["/spec/replicas"]
       target:
         kind: Deployment
  maxHistory: 5
  values:
    core:
      defaultRuleSyntax: v2
    image:
      repository: traefik
    deployment:
      kind: Deployment
      replicas: 1
      # podAnnotations:
      #   linkerd.io/inject: ingress
    podSecurityPolicy:
      enabled: false
    api:
      dashboard:
        enabled: true
      disabledashboardad: true
      insecure: true
    service:
      enabled: true
      type: LoadBalancer
      # See https://github.com/kubernetes/enhancements/pull/1992
      loadBalancerIPs:
        - "${LB_V4_TRAEFIK}"
        - "${LB_V6_TRAEFIK}"
      externalTrafficPolicy: Local
      ipFamilyPolicy: PreferDualStack
      ipFamilies:
        - "IPv4"
        - "IPv6"
      annotations:
        metallb.io/loadBalancerIPs: "${LB_V4_TRAEFIK}, ${LB_V6_TRAEFIK}"
        metallb.io/allow-shared-ip: traefik
    logs:
      general:
        format: json
        level: WARN
      access:
        enabled: true
        format: json
        filters:
          statuscodes: 200,300-302
          retryattempts: true
          minduration: 450000ns
        fields:
          general:
            names:
              defaultmode: drop
              ClientAddr: keep
              RequestAddr: keep
              RequestMethod: keep
              RequestPath: keep
              RequestCount: keep
              RequestProtocol: keep
              RequestScheme: keep
              RetryAttempts: keep
              RouterName: keep
              Duration: keep
          headers:
            defaultmode: keep
            names:
              Authorization: drop
    ingressClass:
      enabled: true
      isDefaultClass: true
    ingressRoute:
      dashboard:
        enabled: false
    globalArguments:
      - "--api.insecure=true"
      - "--serverstransport.insecureskipverify=true"
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"
      - "--metrics.prometheus=true"
      - "--entryPoints.websecure.forwardedHeaders.trustedIPs=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,${NETWORK_K8S_CLUSTER_CIDR_V6},${CALICO_NODE_CIDR_IPV6},${CIDR_V6_SN_1},${CIDR_V6_SN_2},103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,104.16.0.0/13,104.24.0.0/14,108.162.192.0/18,131.0.72.0/22,141.101.64.0/18,162.158.0.0/15,172.64.0.0/13,173.245.48.0/20,188.114.96.0/20,190.93.240.0/20,197.234.240.0/22,198.41.128.0/17,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32"
    providers:
      kubernetesCRD:
        enabled: true
        allowCrossNamespace: true
        allowExternalNameServices: true
        allowEmptyServices: false
        ingressClass: traefik
        # labelSelector: environment=production,method=traefik
        namespaces: []
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        allowEmptyServices: true
        ingressClass: traefik
        # labelSelector: environment=production,method=traefik
        namespaces:
          []
          # - "default"
        # IP used for Kubernetes Ingress endpoints
        publishedService:
          enabled: true
          # Published Kubernetes Service to copy status from. Format: namespace/servicename
          # By default this Traefik service
          # pathOverride: ""
      kubernetesGateway:
        enabled: true
    ports:
      traefik:
        expose:
          default: true
          internal: true
      web:
        port: &webPort 8000
        expose:
          default: true
        exposedPort: 80
        protocol: TCP
        # Port Redirections
        # Added in 2.2, you can make permanent redirects via entrypoints.
        # https://docs.traefik.io/routing/entrypoints/#redirection
        redirections:
          entryPoint:
            to: websecure
            scheme: https
            # permanent: true
            priority: 10
        # Trust forwarded  headers information (X-Forwarded-*)
        # forwardedHeaders:

        #
        # Enable the Proxy Protocol header parsing for the entry point
        # proxyProtocol:
        #   trustedIPs: []
        #   insecure: false
      websecure:
        port: &websecurePort 8443
        # hostPort: 8443
        expose:
          default: true
          internal: true
        exposedPort: 443
        # The port protocol (TCP/UDP)
        protocol: TCP
        # nodePort: 32443
        trustedIPs:
          # Local Servers
          - ${CALICO_NODE_CIDR}
          - ${CALICO_NODE_CIDR_IPV6}
          - ${LOCAL_CIDR_1}
          - ${LOCAL_CIDR_2}
          - ${LOCAL_GATEWAY_MAIN}
          - ${LOCAL_GATEWAY_BGP}
          - ${LOCAL_GATEWAY_CORE_BLOOP}
          - ${NETWORK_K8S_CLUSTER_CIDR}
          - ${NETWORK_K8S_CLUSTER_CIDR_V6}
          - ${NETWORK_K8S_SERVICE_CIDR}
          - ${NETWORK_K8S_SERVICE_CIDR_V6}
          - ${NETWORK_BGP_BLOCK_V4}
          - ${NETWORK_BGP_BLOCK_V6}
          - 172.16.0.0/12
          # Cloudflare IPs
          - 103.21.244.0/22
          - 103.22.200.0/22
          - 103.31.4.0/22
          - 104.16.0.0/13
          - 104.24.0.0/14
          - 108.162.192.0/18
          - 131.0.72.0/22
          - 141.101.64.0/18
          - 162.158.0.0/15
          - 172.64.0.0/13
          - 173.245.48.0/20
          - 188.114.96.0/20
          - 190.93.240.0/20
          - 197.234.240.0/22
          - 198.41.128.0/17
          - 2400:cb00::/32
          - 2606:4700::/32
          - 2803:f800::/32
          - 2405:b500::/32
          - 2405:8100::/32
          - 2a06:98c0::/29
          - 2c0f:f248::/32
        insecure: false
        #
        ## Enable HTTP/3 on the entrypoint
        ## Enabling it will also enable http3 experimental feature
        ## https://doc.traefik.io/traefik/routing/entrypoints/#http3
        ## There are known limitations when trying to listen on same ports for
        ## TCP & UDP (Http3). There is a workaround in this chart using dual Service.
        ## https://github.com/kubernetes/kubernetes/issues/47249#issuecomment-587960741
        http3:
          enabled: true
          # advertisedPort: 4443
        ## Set TLS at the entrypoint
        ## https://doc.traefik.io/traefik/routing/entrypoints/#tls
        tls:
          enabled: true
          options: default
          domains:
            - main: "${XYZ_DOMAIN}"
              sans:
                - "*.${XYZ_DOMAIN}"
            - bloop: "${SECRET_DOMAIN}"
              sans:
                - "*.${SECRET_DOMAIN}"
            - tyg3r: "${TGR_DOMAIN}"
              sans:
                - "*.${TGR_DOMAIN}"
            - lilj: "${LILJ_DOMAIN}"
              sans:
                - "*.${LILJ_DOMAIN}"
          stores: networking-default@kubernetescrd
      dns-tls:
        port: 8853
        expose:
          default: true
        exposedPort: 853
        tls:
          enabled: true
          options: default
      wss:
        port: 8284
        expose:
          default: true
        exposedPort: 8084
        tls:
          enabled: true
          options: default
      mqtts:
        port: 8183
        expose:
          default: true
        exposedPort: 8883
        tls:
          enabled: true
          options: default
      ldaps:
        port: 8636
        expose:
          default: true
        exposedPort: 636
        tls:
          enabled: true
          options: default
      metrics:
        port: 8082
        expose:
          default: true
        exposedPort: 8082
      postgres:
        port: 5432
        expose:
          default: true
        expostedPort: 5432
        tls:
          enabled: false
    tlsOptions:
      default:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
        sniStrict: true
      plex:
        minVersion: VersionTLS12
        maxVersion: VersionTLS13
    extraObjects:
      - apiVersion: v1
        kind: Service
        metadata:
          name: traefik-api
        spec:
          type: ClusterIP
          selector:
            app.kubernetes.io/name: traefik
            app.kubernetes.io/instance: traefik-default
          ports:
          - port: 8080
            name: traefik
            targetPort: 8080
            protocol: TCP        
    gateway:
      name: traefik
      # annotations:
      #   external-dns.alpha.kubernetes.io/target: &hostname "in.${XYZ_DOMAIN}"
      # infrastructure:
      #   annotations:
      #     external-dns.alpha.kubernetes.io/hostname: *hostname
      listeners:
        web:
          port: *webPort
          protocol: HTTP
          namespacePolicy:
            from: All
        websecure:
          port: *websecurePort
          protocol: HTTPS
          namespacePolicy:
            from: All
          certificateRefs:
            - kind: Secret
              name: "tls.${XYZ_DOMAIN/./-}"
    pilot:
      enabled: false

    resources:
      requests:
        cpu: 15m
        memory: 110M
      limits:
        memory: 742M

    metrics:
      prometheus:
        entryPoint: metrics
        service:
          enabled: true
        ##  enable optional CRDs for Prometheus Operator
        ##
        serviceMonitor:
          enabled: true
          additionalLabels:
            foo: bar
          namespace: "networking"
          namespaceSelector: {}
          metricRelabelings:
            - sourceLabels: [__name__]
              separator: ;
              regex: ^fluentd_output_status_buffer_(oldest|newest)_.+
              replacement: $1
              action: drop
          relabelings:
            - sourceLabels: [__meta_kubernetes_pod_node_name]
              separator: ;
              regex: ^(.*)$
              targetLabel: nodename
              replacement: $1
              action: replace
          jobLabel: traefik
          scrapeInterval: 30s
          scrapeTimeout: 5s
          honorLabels: true
        prometheusRule:
          enabled: true
          additionalLabels: {}
          namespace: "networking"
          rules:
            - alert: TraefikDown
              expr: up{job="traefik"} == 0
              for: 5m
              labels:
                context: traefik
                severity: warning
              annotations:
                summary: "Traefik Down"
                description: "{{ $labels.pod }} on {{ $labels.nodename }} is down"

    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - *name
            topologyKey: kubernetes.io/hostname
