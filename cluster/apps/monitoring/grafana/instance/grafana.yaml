---
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  namespace: monitoring
  labels:
    dashboards: "grafana"
spec:
  deployment:
    spec:
      replicas: 1
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
      template:
        metadata:
          annotations:
            configmap.reloader.stakater.com/reload: "grafana"
  config:
    log:
      mode: "console"
      filters: "auth.generic_oauth:debug"
    auth:
      disable_login_form: "true"
      signout_redirect_url: https://iam.${XYZ_DOMAIN}/realms/bloopnet/protocol/openid-connect/logout?redirect_uri=encodedRedirectUri
    auth.generic_oauth:
      enabled: "true"
      name: ${CLUSTER_NAME}
      client_id: "${GRAFANA_OAUTH_CLIENT_ID}"
      client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
      scopes: "openid email profile offline_access roles"
      email_attribute_path: email
      login_attribute_path: username
      name_attribute_path: full_name
      allow_assign_grafana_admin: "true"
      auth_url: https://iam.${XYZ_DOMAIN}/realms/bloopnet/protocol/openid-connect/auth
      token_url: https://iam.${XYZ_DOMAIN}/realms/bloopnet/protocol/openid-connect/token
      api_url: https://iam.${XYZ_DOMAIN}/realms/bloopnet/protocol/openid-connect/userinfo
      role_attribute_path: "contains(roles[*], 'grafana-admin') && 'GrafanaAdmin' || contains(roles[*], 'grafana-editor') && 'Editor' || 'Viewer'"
    auth.jwt:
      enabled: "true"
      jwk_set_url: https://iam.${XYZ_DOMAIN}/realms/bloopnet/protocol/openid-connect/certs"
      role_attribute_path: "contains(roles[*], 'grafana-admin') && 'GrafanaAdmin' || contains(roles[*], 'grafana-editor') && 'Editor' || 'Viewer'"
    security:
      admin_user: root
      admin_password: ${SECRET_GRAFANA_PASSWORD}
    grafana_net:
      url: https://grafana.net
    panels:
      disable_sanitize_html: "true"
    server:
      root_url: "https://grafana.${XYZ_DOMAIN}"
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
    analytics:
      check_for_updates: "false"
  ingress:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        hajimari.io/instance: "bloop-quarky"
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-bar-stacked"
        hajimari.io/appName: "Status"
        external-dns.alpha.kubernetes.io/hostname: ipv4.${XYZ_DOMAIN}
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.middlewares: networking-chain-no-auth@kubernetescrd
        traefik.ingress.kubernetes.io/affinity: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    spec:
      ingressClassName: "traefik"
      rules:
        - host: "grafana.${XYZ_DOMAIN}"
          http:
            paths:
              - backend:
                  service:
                    name: grafana-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - secretName: tls.grafana
          hosts:
            - "grafana.${XYZ_DOMAIN}"
