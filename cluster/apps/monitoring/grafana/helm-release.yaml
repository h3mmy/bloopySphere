---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://grafana.github.io/helm-charts
      chart: grafana
      version: 6.26.7
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m

  install:
    remediation:
      retries: 7
  upgrade:
    remediation:
      retries: 7

  values:
    replicas: 1

    podAnnotations:
      configmap.reloader.stakater.com/reload: "grafana"

    persistence:
      enabled: true
      storageClassName: "nfs-client"
      size: 10Gi
      accessModes:
        - ReadWriteOnce

    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: "panodata-map-panel"
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: "MMM Do, YYYY hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_SECOND: "hh:mm:ss a"
      GF_DATE_FORMATS_INTERVAL_MINUTE: "hh:mm a"
      GF_DATE_FORMATS_INTERVAL_HOUR: "DD/MM hh:mm a"
      GF_DATE_FORMATS_INTERVAL_DAY: "DD/MM"
      GF_DATE_FORMATS_INTERVAL_MONTH: "MM-YYYY"
      GF_DATE_FORMATS_INTERVAL_YEAR: "YYYY"
      VAR_BLOCKY_URL: "http://blocky.network.svc.cluster.local:4000"
      DS_PROMETHEUS: "prometheus"
    adminPassword: "${SECRET_GRAFANA_PASSWORD}"
    grafana.ini:
      server:
        root_url: "https://grafana.${XYZ_DOMAIN}"
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      panels:
        disable_sanitize_html: true
      auth.basic:
        disable_login_form: false
      auth.generic_oauth:
        enabled: true
        name: ${CLUSTER_NAME}
        client_id: "${GRAFANA_OAUTH_CLIENT_ID}"
        client_secret: "${GRAFANA_OAUTH_CLIENT_SECRET}"
        scopes: "openid email profile"
        auth_url: https://auth.${XYZ_DOMAIN}/application/o/authorize/
        token_url: https://auth.${XYZ_DOMAIN}/application/o/token/
        api_url: https://auth.${XYZ_DOMAIN}/application/o/userinfo/
        role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            allowUiUpdates: true
            options:
              path: /var/lib/grafana/dashboards/default

    datasources:
      datasources.yaml:
        apiVersion: 1
        # list of datasources that should be deleted from the database
        deleteDatasources:
          - name: Loki
            orgId: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://thanos-query:9090
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
          - name: Promeheus-Direct
            type: prometheus
            access: proxy
            url: http://prometheus-prometheus.monitoring.svc.cluster.local:9090
          - name: MariaDB Blocky
            type: mysql
            url: ${MARIADB_ADDRESS}:3306
            database: blocky
            user: ${MARIADB_GRAFANA_USER}
            secureJsonData:
              password: ${MARIADB_GRAFANA_PASSWORD}
          - name: MariaDB Hass
            type: mysql
            url: ${MARIADB_ADDRESS}:3306
            database: hadb
            user: ${MARIADB_GRAFANA_USER}
            secureJsonData:
              password: ${MARIADB_GRAFANA_PASSWORD}

    dashboards:
      default:
        blocky:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/development/docs/blocky-grafana.json
          datasource: Prometheus
        blocky-query:
          url: https://raw.githubusercontent.com/0xERR0R/blocky/development/docs/blocky-query-grafana.json
          datasource: MariaDB Blocky
        # Ref: https://grafana.com/grafana/dashboards/12175
        calico-felix:
          gnetId: 12175
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842
        ceph-cluster:
          gnetId: 2842
          revision: 14
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336
        ceph-osd:
          gnetId: 5336
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342
        ceph-pools:
          gnetId: 5342
          revision: 5
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11315
        unifi-client-insights:
          gnetId: 11315
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11311
        unifi-network-sites:
          gnetId: 11311
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11314
        unifi-uap-insights:
          gnetId: 11314
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/11312
        unifi-usw-insights:
          gnetId: 11312
          revision: 8
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13665
        speedtest:
          gnetId: 13665
          revision: 1
          datasource: Prometheus

    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
      datasources:
        enabled: true
        searchNamespace: ALL

    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      - grafana-singlestat-panel
      - grafana-polystat-panel
      - mxswat-separator-panel
      - farski-blendstat-panel

    # imageRenderer:
    #   enabled: true

    serviceMonitor:
      enabled: false

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        hajimari.io/instance: "bloop-quarky"
        hajimari.io/enable: "true"
        hajimari.io/icon: "chart-bar-stacked"
        hajimari.io/appName: "Status"
        external-dns.alpha.kubernetes.io/hostname: ipv4.${XYZ_DOMAIN}
        external-dns/is-public: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
      hosts:
        - "grafana.${XYZ_DOMAIN}"
      tls:
        - secretName: tls.grafana
          hosts:
            - "grafana.${XYZ_DOMAIN}"

    serviceAccount:
      create: true
      autoMount: true

    nodeSelector:
      kubernetes.io/hostname: "slowpoke"
