---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: network-ups-tools
  namespace: home
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: network-ups-tools
      version: 6.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  values:
    # Future plans
    # controller:
    #   type: daemonset

    image:
      repository: ghcr.io/k8s-at-home/network-ups-tools
      tag: v2.7.4-2479-g86a32237

    env:
      TZ: "${TZ}"

    securityContext:
      privileged: true

    tolerations:
      - key: "kubernetes.io/arch"
        operator: "Equal"
        value: "arm64"

    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          # Node Selector Terms are supposedly ORed (https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.24/#nodeselectorrequirement-v1-core)
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-ups.cp1500
                  operator: In
                  values:
                    - "true"
                - key: feature.node.kubernetes.io/custom-ups.cp1500lcd
                  operator: In
                  values:
                    - "true"
    service:
      main:
        annotations:
          metallb.universe.tf/loadBalancerIPs: "${LB_NUT}"
        ports:
          http:
            enabled: false
          server:
            enabled: true
            protocol: TCP
            port: 3493
    # The main configuration files for network-ups-tools
    config:
      # If set to 'values', the configuration will be read from these values.
      # Otherwise you have to mount a volume to /etc/nut containing the configuration files.
      mode: values
      # See https://github.com/networkupstools/nut/tree/master/conf for config sample files
      files:
        ups.conf: |
          [ups.cp1500]
            driver = usbhid-ups
            port = auto
            desc = "CyberPower CP1500 AVR UPS"
            vendorid = 0764
            productid = 0501
            serial = ${UPS_SERIAL_0}
          [ups.cp1500lcd]
            driver = usbhid-ups
            port = auto
            desc = "CyberPower PR1500LCDRT2U UPS"
            vendorid = 0764
            productid = 0601
            serial = ${UPS_SERIAL_1}
        upsmon.conf: |
          DEADTIME 25
          MAXAGE 25
        upsd.users: |
          [monuser]
            password = secret
            upsmon slave
          [monmaster]
            password = secret
            upsmon master

    resources:
      requests:
        memory: 64Mi
        cpu: 25m
      limits:
        memory: 128Mi

    metrics:
      enabled: true
      serviceMonitor:
        interval: 10m
        scrapeTimeout: 3m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: mcfio/prometheus-nut-exporter
          tag: 1.1.1

    podAnnotations:
      configmap.reloader.stakater.com/reload: "network-ups-tools-config"

    persistence:
      ups:
        enabled: true
        type: hostPath
        # -- The path of the usb ups on the host.
        # -- This will need to be changed every single time it is switched on nodes
        hostPath: /dev/bus/usb/001/004
        hostPathType: CharDevice
        # -- Optional path for ups to mount in the container.
        mountPath: /dev/bus/usb/001/001
        readOnly: false
