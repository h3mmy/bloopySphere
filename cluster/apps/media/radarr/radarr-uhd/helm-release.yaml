---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr-uhd
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
       # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.3.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      reconcileStrategy: Revision
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      remediateLastFailure: true
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: traefik
      namespace: networking
  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr-nightly
      tag: v4.3.1.6748
    env:
      TZ: "${TZ}"
      PGID: "${MEDIA_GID}"
      RADARR__PORT: &port 7878
      RADARR__APPLICATION_URL: https://radarr.${XYZ_DOMAIN}
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          hajimari.io/instance: "bloop-quarky"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.priority: "99"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
        hosts:
          - host: &host "radarr-uhd.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.radarr-uhd
            hosts:
              - *host

    securityContext:
      runAsUser: 0
      runAsGroup: 0

    podSecurityContext:
      fsGroup: "${MEDIA_GID}"
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537

    persistence:
      config:
        enabled: true
        existingClaim: radarr-uhd-config-v1
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume3/Data
        mountPath: /Data
        readOnly: false
      media-2:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume1/Data2
        mountPath: /Data2
        readOnly: false
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume3/Data/Backups/app/radarr-uhd
        mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        memory: 250Mi
        cpu: 100m
      limits:
        memory: 1500Mi
  #  tolerations:
   #   - key: "arch"
   #     operator: "Equal"
   #     value: "arm64"
  #      effect: "NoSchedule"
