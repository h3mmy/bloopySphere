apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 4
  upgrade:
    remediation:
      retries: 3
      remediateLastFailure: true
  dependsOn:
    - name: intel-gpu-plugin
      namespace: kube-system
    - name: node-feature-discovery
      namespace: kube-system
  values:
    image:
      repository: ghcr.io/onedr0p/plex # {"$imagepolicy": "flux-system:plex:name"}
      tag: "1.29.1.6316-f4cdfea9c" # {"$imagepolicy": "flux-system:plex:tag"}
      imagePullPolicy: IfNotPresent
    env:
      TZ: "${TZ}"
      ADVERTISE_IP: "http://${LB_PLEX_IP}:32400/,https://plex.${XYZ_DOMAIN}/"
      ALLOWED_NETWORKS: "${PLEX_NOAUTH_NETWORKS}"
      # PLEX_CLAIM: "${SECRET_PLEX_CLAIM}"
      # https://support.plex.tv/articles/201105343-advanced-hidden-server-settings/
      PLEX_PREFERENCE_1: "FriendlyName=Slowpoke"
      PLEX_PREFERENCE_2: "BackgroundTranscodeLowPriority=1"
      PLEX_PREFERENCE_3: "ManualPortMappingMode=1"
      PLEX_PREFERENCE_4: "ManualPortMappingPort=${PLEX_EXTERNAL_PORT}"
      # PLEX_PREFERENCE_5: "LanNetworksBandwidth=192.168.0.0/16\,10.0.0.0/8"
      PLEX_PREFERENCE_6: "TranscoderTempDirectory=/tmp"
      PLEX_PREFERENCE_7: "GdmEnabled=1"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: "OnRootMismatch"
      # Hardware acceleration using an Intel iGPU w/ QuickSync
      # These IDs below should be matched to your `video` and `render` group on the host
      # To obtain those IDs run the following grep statement on the host:
      # $ cat /etc/group | grep "video\|render"
      # video:x:44:
      # render:x:109:
      supplementalGroups:
        - 44
        - 109
        - 100
        - 5600
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537
    service:
      main:
        type: LoadBalancer
        loadBalancerIPs:
          - ${LB_PLEX_IP}
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: plex
          traefik.ingress.kubernetes.io/service.serversscheme: https
          coredns.io/hostname: plex
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/instance: "bloop-xyz,bloop-quarky"
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"
          hajimari.io/appName: "Plex"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          # traefik.ingress.kubernetes.io/router.tls.options: "networking-plex@kubernetescrd"
          traefik.ingress.kubernetes.io/router.priority: "150"
          # traefik.ingress.kubernetes.io/router.middlewares: "networking-plex-add-web@kubernetescrd"
        hosts:
          - host: "plex.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "{{ (index .Values.ingress.main.hosts 0).host }}"
            secretName: "tls.plex"
    persistence:
      config:
        enabled: true
        storageClass: "local-path"
        accessMode: ReadWriteOnce
        size: 20Gi
      transcode:
        enabled: true
        type: emptyDir
        accessMode: ReadWriteOnce
        emptyDir:
          enabled: true
          sizeLimit: 10Gi
      tmp:
        enabled: true
        type: emptyDir
        medium: Memory
      nfs-media-pvc:
        enabled: true
        existingClaim: nfs-media-pvc
        mountPath: /Data
        readOnly: false
      nfs-media-2-pvc:
        enabled: true
        existingClaim: nfs-media-2-pvc
        mountPath: /Data2
        readOnly: false
      nfs-misc-pvc:
        enabled: true
        existingClaim: nfs-misc-pvc
        mountPath: /DataR
        readOnly: false
    podAnnotations:
      backup.velero.io/backup-volumes: config
      # pre.hook.backup.velero.io/container: fsfreeze
      # pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
      # post.hook.backup.velero.io/container: fsfreeze
      # post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'
    resources:
      requests:
        cpu: 100m
        memory: 1500Mi
        gpu.intel.com/i915: 1
      limits:
        gpu.intel.com/i915: 1
        memory: 9000Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
    addons:
      promtail:
        enabled: true
        image:
          repository: grafana/promtail
          tag: 2.6.1
        loki: http://loki.monitoring.svc.cluster.local:3100/loki/api/v1/push
        logs:
          - name: promtail/plex
            path: "/config/Library/Application Support/Plex Media Server/Logs/*.log"
          - name: promtail/plex/plugins
            path: "/config/Library/Application Support/Plex Media Server/Logs/PMS Plugin Logs/*.log"
        volumeMounts:
          - name: config
            mountPath: /config
            readOnly: true
        securityContext:
          runAsUser: 0

    # additionalContainers:
    #   git-sync:
    #     name: git-sync
    #     image: willdockerhub/git-sync:v3.3.0
    #     imagePullPolicy: IfNotPresent
    #     args:
    #       - "--repo=${PLEX_PLUGIN_REPO}"
    #       - "--branch=main"
    #       - "--username=h3mmy"
    #       - "--password=${PLEX_GITSYNC_GITHUB_TOKEN}"
    #       - "--root=/config/Library/Application Support/Plex Media Server/Plug-ins"
    #       - "--wait=30"

# additionalContainers:
#   fsfreeze:
#     name: fsfreeze
#     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
#     volumeMounts:
#       - name: config
#         mountPath: /data
#     securityContext:
#       privileged: true
