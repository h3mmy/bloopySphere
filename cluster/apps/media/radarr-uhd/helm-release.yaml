---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr-uhd
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 16.0.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 4
  upgrade:
    remediation:
      remediateLastFailure: true
  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr-nightly
      tag: v4.2.0.6204
    env:
      TZ: "${TZ}"
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          hajimari.io/instance: "bloop-xyz,bloop-quarky"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.priority: "10"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
        hosts:
          - host: "radarr-uhd.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.radarr-uhd
            hosts:
              - "{{ (index .Values.ingress.main.hosts 0).host }}"

    podSecurityContext:
      supplementalGroups:
        - 100
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537
    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.0.0
        env:
          port: 9794
          additionalMetrics: true
          unknownQueueItems: false
    persistence:
      config:
        enabled: true
        existingClaim: radarr-uhd-config-v1
      media:
        enabled: true
        existingClaim: nfs-media-pvc
        mountPath: /Data
        readOnly: false
      media-2:
        enabled: true
        existingClaim: nfs-media-2-pvc
        mountPath: /Data2
        readOnly: false
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume3/Data/Backups/app/radarr-uhd
        mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi
