---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
    - name: traefik
      namespace: networking
    - name: node-feature-discovery
      namespace: kube-system
  maxHistory: 3
  interval: 5m
  suspend: false
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 100
        capabilities:
          add:
            - CHOWN
        fsGroupChangePolicy: "OnRootMismatch"
        # Required for passthrough of /dev/dri devices from NFD
        # https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal.html
        supplementalGroups:
          - 44
          - 109
          # Custom Camelus Group(s)
          - 65541
          - 65536
          - 65537
    controllers:
      main:
        type: deployment
        containers:
          main:
            image:
              repository: ghcr.io/haveagitgat/tdarr_acc
              tag: 2.17.01
              pullPolicy: IfNotPresent
            env:
              webUIPort: &web-port 8265
              serverIP: 0.0.0.0
              serverPort: &server-port 8266
              TZ: ${TZ}
              ffmpegPath: "/usr/local/bin/ffmpeg"
              PGID: 65537
            resources:
              requests:
                cpu: 10m
                memory: 250Mi

    persistence:
      server:
        enabled: true
        existingClaim: tdarr-data-v1
        globalMounts:
          - path: /app/server
      config:
        enabled: true
        existingClaim: tdarr-config-v1
        globalMounts:
          - path: /app/configs
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: &mediaPath /volume3/Data
            server: ${NAS_ADDRESS}
        mountPath: *mediaPath
        readOnly: false
      media2:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: &mediaPath2 /volume1/Data2
            server: ${NAS_ADDRESS}
        mountPath: *mediaPath2
        readOnly: false
      cache:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume3/Data/cache/tdarr
        mountPath: /cache

    service:
      main:
        ports:
          http:
            port: *web-port
          server:
            enabled: true
            protocol: TCP
            port: *server-port

    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc-1918@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/instance: "bloop-quarky"
          hajimari.io/icon: material-symbols:switch-video-outline
          hajimari.io/group: media
        hosts:
          - host: &host tdarr.${XYZ_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: tls.tdarr

    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname
              namespaces:
                - media
