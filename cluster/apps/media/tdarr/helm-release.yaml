---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tdarr
  namespace: media
spec:
  dependsOn:
    - name: traefik
      namespace: networking
    - name: node-feature-discovery
      namespace: kube-system
  maxHistory: 3
  interval: 5m
  suspend: false
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  values:
    image:
      repository: haveagitgat/tdarr
      tag: 2.00.20
      pullPolicy: IfNotPresent
    env:
      webUIPort: &web-port 8265
      serverIP: 0.0.0.0
      serverPort: &server-port 8266
      TZ: ${TZ}
      ffmpegPath: /usr/bin/ffmpeg
      PGID: 65537
    additionalContainers:
      node:
        name: node
        image: haveagitgat/tdarr_node:2.00.20
        imagePullPolicy: IfNotPresent
        env:
          - name: TZ
            value: ${TZ}
          - name: nodeID
            value: node
          - name: serverIP
            value: localhost
          - name: serverPort
            value: *server-port
        volumeMounts:
          - name: config
            mountPath: /app/configs
          - name: media
            mountPath: &mediaPath /volume3/Data
          - name: media2
            mountPath: &mediaPath2 /volume1/Data2
          - name: shared
            mountPath: /shared
    podSecurityContext:
      # Required for passthrough of /dev/dri devices from NFD
      # https://dgpu-docs.intel.com/installation-guides/ubuntu/ubuntu-focal.html
      supplementalGroups:
        - 44
        - 109
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537
    resources:
      requests:
        gpu.intel.com/i915: 1
      limits:
        gpu.intel.com/i915: 1
    persistence:
      data:
        enabled: true
        mountPath: /app/server
        existingClaim: tdarr-data-v1
      config:
        enabled: true
        existingClaim: tdarr-config-v1
        mountPath: /app/configs
      shared:
        enabled: true
        type: emptyDir
        mountPath: /shared
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: *mediaPath
            server: ${NAS_ADDRESS}
        mountPath: *mediaPath
        readOnly: false
      media2:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: *mediaPath2
            server: ${NAS_ADDRESS}
        mountPath: *mediaPath2
        readOnly: false
    service:
      main:
        ports:
          http:
            port: *web-port
          server:
            enabled: true
            protocol: TCP
            port: *server-port
    ingress:
      main:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/instance: "bloop-quarky"
          hajimari.io/icon: material-symbols:switch-video-outline
          hajimari.io/group: media
        hosts:
          - host: &host tdarr.${XYZ_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: tls.tdarr
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - plex
              topologyKey: kubernetes.io/hostname
              namespaces:
                - media
