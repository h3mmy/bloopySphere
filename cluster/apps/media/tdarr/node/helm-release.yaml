---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tdarr-node
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 4.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  dependsOn:
    - name: traefik
      namespace: networking
    - name: node-feature-discovery
      namespace: kube-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 100
        supplementalGroups:
          - 34
          - 44
          - 100
          - 109
          - 226
          # Custom Camelus Group(s)
          - 65541
          - 65536
          - 65537
        fsGroupChangePolicy: "OnRootMismatch"
    controllers:
      main:
        type: deployment
        containers:
          main:
            image:
              repository: ghcr.io/haveagitgat/tdarr_node_acc
              tag: 2.49.01
              pullPolicy: IfNotPresent
            env:
              TZ: "${TZ}"
              # PUID: "568"
              # PGID: "568"
              serverIP: tdarr.media.svc.cluster.local
              serverPort: &server-port 8266
              ffmpegPath: "/usr/local/bin/ffmpeg"
              nodeName:
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
            ports:
              - name: http
                containerPort: *server-port
            resources:
              requests:
                cpu: 10m
                memory: 250Mi
            securityContext:
              capabilities:
                add:
                  - CHOWN
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: feature.node.kubernetes.io/custom-intel-gpu
                  operator: In
                  values:
                    - "true"
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - "plex"
                    - "tdarr-node"
            topologyKey: "kubernetes.io/hostname"

    service:
      main:
        enabled: false
        controller: main
        ports:
          http:
            port: *server-port

    persistence:
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: &mediaPath /volume3/Data
            server: ${NAS_ADDRESS}
        globalMounts:
          - path: *mediaPath
            readOnly: false
      media2:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            path: &mediaPath2 /volume1/Data2
            server: ${NAS_ADDRESS}
        globalMounts:
          - path: *mediaPath2
            readOnly: false
      cache:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume3/Data/cache/tdarr
        globalMounts:
          - path: /cache
