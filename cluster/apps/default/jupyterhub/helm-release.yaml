---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jupyterhub
  namespace: default
spec:
  interval: 5m
  timeout: 20m
  chart:
    spec:
      # renovate: registryUrl=https://jupyterhub.github.io/helm-chart/
      chart: jupyterhub
      version: 1.2.0
      sourceRef:
        kind: HelmRepository
        name: jupyterhub-charts
        namespace: flux-system
      interval: 5m

  install:
    remediation:
      retries: 4
  upgrade:
    remediation:
      remediateLastFailure: true

  values:
    hub:
      authenticatePrometheus: false
      nodeSelector:
        kubernetes.io/arch: amd64
      db:
        type: mysql
        url: "${JUPYTER_DB_URL}"
        upgrade: true
      config:
        Authenticator:
          admin_users:
            - ${JHUB_ADMIN}
            - ${JHUB_ADMIN2}
            - ${JHUB_ADMIN3}
        GenericOAuthenticator:
          client_id: ${JHUB_OAUTH_CLIENT_ID}
          client_secret: ${JHUB_OAUTH_CLIENT_SECRET}
          oauth_callback_url: "https://jhub.${XYZ_DOMAIN}/hub/oauth_callback"
          authorize_url: "https://auth.${XYZ_DOMAIN}/application/o/authorize/"
          token_url: "https://auth.${XYZ_DOMAIN}/application/o/token/"
          userdata_url: "https://auth.${XYZ_DOMAIN}/application/o/userinfo/"
          scope:
            - openid
            - profile
            - email
          username_key: preferred_username
        JupyterHub:
          authenticator_class: generic-oauth
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-production"
        traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
        traefik.ingress.kubernetes.io/router.middlewares: "networking-chain-no-auth@kubernetescrd"
        kubernetes.io/ingress.class: "traefik"
        hajimari.io/enable: "true"
        hajimari.io/instance: "bloop-xyz"
        hajimari.io/icon: "chart-scatter-plot"
        hajimari.io/appName: "jupyterhub"
      hosts:
        - "jhub.${XYZ_DOMAIN}"
      tls:
        - secretName: tls.jhub
          hosts:
            - "jhub.${XYZ_DOMAIN}"
    singleuser:
      cpu:
        limit: 4
        guarantee: 0.05
      memory:
        limit: 8G
        guarantee: 512M
      defaultUrl: "/lab"
      extraEnv:
        JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
      storage:
        capacity: 15Gi
        dynamic:
          storageClass: ceph-block
      # Defines the default image
      image:
        name: jupyter/scipy-notebook
        tag: 82ce73789ba4
      profileList:
        - display_name: "Minimal environment"
          description: "To avoid too much bells and whistles: Python."
          kubespawner_override:
            image: jupyter/minimal-notebook:82ce73789ba4
        - display_name: "Datascience environment"
          description: "If you want the additional bells and whistles: Python, R, and Julia."
          default: true
        - display_name: "Spark environment"
          description: "The Jupyter Stacks spark image!"
          kubespawner_override:
            image: jupyter/all-spark-notebook:2343e33dec46
        - display_name: "Learning Data Science"
          description: "Datascience Environment with Sample Notebooks"
          kubespawner_override:
            image: jupyter/datascience-notebook:2343e33dec46
            # lifecycle_hooks:
            #   postStart:
            #     exec:
            #       command:
            #         - "sh"
            #         - "-c"
            #         - >
            #           gitpuller https://github.com/data-8/materials-fa17 master materials-fa;
