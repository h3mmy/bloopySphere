---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vpn-gateway
  namespace: vpn-gateway
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: pod-gateway
      version: 5.4.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m

  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5

  values:
    image:
      repository: ghcr.io/k8s-at-home/pod-gateway
      tag: v1.5.0

    env:
      TZ: "${TZ}"

    routed_namespaces:
      - downloads

    publicPorts:
      - hostname: qbittorrent # hostname assigned to the pod
        IP: 10 # must be an integer between 2 and VXLAN_GATEWAY_FIRST_DYNAMIC_IP (20 by default)
        ports:
          - type: udp
            port: ${VPN_FORWARDED_PORT_1}
          - type: tcp
            port: ${VPN_FORWARDED_PORT_1}

    # Default VPN_VXLAN DNS
    DNS: 172.16.0.1

    settings:
      NOT_ROUTED_TO_GATEWAY_CIDRS: "172.16.0.0/12 ${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${NETWORK_MANAGEMENT_CIDR}"
      # tun0 for openvpn, wg0 for wireguard
      VPN_INTERFACE: wg0
      # VXLAN_IP_NETWORK: ${WG_VXLAN_CIDR}
      # Prevent non VPN traffic to leave the gateway
      VPN_BLOCK_OTHER_TRAFFIC: false
      # If VPN_BLOCK_OTHER_TRAFFIC is true, allow VPN traffic over this port
      VPN_TRAFFIC_PORT: ${VPN_GATEWAY_VPN_PORT}
      # Traffic to these IPs will be send through the K8S gateway
      # change if your K8S cluster or home network uses a different CIDR
      VPN_LOCAL_CIDRS: "172.16.0.0/12 ${NETWORK_K8S_CLUSTER_CIDR} ${NETWORK_K8S_SERVICE_CIDR} ${NETWORK_MANAGEMENT_CIDR} ${LOCAL_CIDR_1} ${LOCAL_CIDR_2}"
      DNS_LOCAL_CIDRS: "local ${DOMAIN_BIG_BLOOP} ${DOMAIN_BIG_BLOOP} ${DOMAIN_CORE_BLOOP}"

    webhook:
      image:
        repository: ghcr.io/k8s-at-home/gateway-admision-controller
        tag: v3.4.0

      gatewayDefault: true
      gatewayLabel: setGateway
      gatewayAnnotation: setGateway
      namespaceSelector:
        label: "routed-gateway"

    livenessProbe:
      exec:
        command:
          - sh
          - -c
          - if [ $(curl -s https://am.i.mullvad.net/country) = '${VPN_COUNTRY}' ]; then exit 0; else exit $?; fi
      initialDelaySeconds: 30
      periodSeconds: 60
      failureThreshold: 1

    addons:
      netshoot:
        enabled: true

      vpn:
        enabled: true
        type: wireguard

        wireguard:
          image:
            repository: ghcr.io/k8s-at-home/wireguard
            tag: v1.0.20210914
            pullPolicy: IfNotPresent

        securityContext:
          runAsUser: 568
          runAsGroup: 568
          # capabilities:
          #   drop:
          #     - "SYS_MODULE"

        env:
          TZ: "${TZ}"
          IPTABLES_BACKEND: nft
          # @default -- false
          # KILLSWITCH: "true"
          # -- A separated list of IPv4 networks that will be excluded from the VPN/killswitch
          # KILLSWITCH_EXCLUDEDNETWORKS_IPV4: "${NETWORK_K8S_CLUSTER_CIDR};${NETWORK_K8S_SERVICE_CIDR};${NETWORK_MANAGEMENT_CIDR}"
          # -- A separated list of IPv6 networks that will be excluded from the VPN/killswitch
          # KILLSWITCH_EXCLUDEDNETWORKS_IPV6:
          # -- The separator that is used to split the KILLSWITCH_EXCLUDEDNETWORKS lists
          # @default -- ;
          # SEPARATOR: ;

        configFileSecret: vpn-gateway-vpnconfig

        resources:
          requests:
            cpu: "0.001"
            memory: 128Mi
          limits:
            memory: 512Mi

        networkPolicy:
          enabled: true

          egress:
            - to:
                - ipBlock:
                    cidr: 0.0.0.0/0
              ports:
                - port: ${VPN_GATEWAY_VPN_PORT}
                  protocol: UDP
                - port: ${VPN_GATEWAY_VPN_PORT}
                  protocol: TCP
                - port: 53
                  protocol: UDP
            - to:
                # Allow traffic within K8S - change if your K8S cluster uses a different CIDR
                - ipBlock:
                    cidr: ${NETWORK_K8S_CLUSTER_CIDR}
                - ipBlock:
                    cidr: ${NETWORK_K8S_SERVICE_CIDR}
                - namespaceSelector: {}
