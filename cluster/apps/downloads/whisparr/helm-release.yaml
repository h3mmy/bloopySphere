---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app whisparr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.0.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controller:
      type: statefulset
    image:
      repository: ghcr.io/onedr0p/whisparr-nightly
      tag: 0.1.0.53@sha256:a4557769999bd3c4e173b403a227775cd1bd42feadc87a56bad5fc7c5f183c23
    env:
      TZ: "${TZ}"
      PGID: "${MEDIA_GID}"
      WHISPARR__INSTANCE_NAME: Whisparr
      WHISPARR__PORT: &port 80
      WHISPARR__LOG_LEVEL: info
    envFrom:
      - secretRef:
          name: *app
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "folder-lock"
          hajimari.io/instance: "bloop-quarky"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.priority: "99"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
        hosts:
          - host: &host "{{ .Release.Name }}.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: tls.whisparr
    podSecurityContext:
      runAsUser: 1041
      fsGroup: ${MEDIA_GID}
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
        - 568
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          app.kubernetes.io/name: *app
          app.kubernetes.io/instance: *app
    persistence:
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume1/DataR
        mountPath: /DataR
        readOnly: true
      downloads:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume3/Data/Downloads
        mountPath: /Downloads
        readOnly: true
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
