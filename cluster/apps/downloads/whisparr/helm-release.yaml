---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app whisparr
  namespace: downloads
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: vpn-gateway
      namespace: vpn-gateway
  valuesFrom:
    - kind: Secret
      name: *app
      valuesKey: WHISPARR__API_KEY
      targetPath: env.WHISPARR__API_KEY
      optional: false
  values:
    global:
      nameOverride: *app
    controller:
      type: statefulset
    image:
      repository: ghcr.io/drag0n141/whisparr-nightly
      tag: 2.0.0.1096@sha256:40b99b3359f8aa70eb586bf866f191c6b3137a0d656312514f2e511add9462aa
    env:
      TZ: "${TZ}"
      PGID: ${MEDIA_GID}
      PUID: ${SONARR_PUID}
      WHISPARR__INSTANCE_NAME: Whisparr
      WHISPARR__PORT: &port 80
      WHISPARR__LOG_LEVEL: info
      WHISPARR__AUTHENTICATION_METHOD: External
      WHISPARR__APPLICATION_URL: https://whisparr.${XYZ_DOMAIN}
      WHISPARR__AUTHENTICATION_REQUIRED: DisabledForLocalAddresses
    service:
      main:
        ports:
          http:
            port: *port
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          hajimari.io/enable: "true"
          hajimari.io/icon: "folder-lock"
          hajimari.io/instance: "bloop-quarky"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.priority: "99"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
        hosts:
          - host: &host "{{ .Release.Name }}.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: tls.whisparr
    podSecurityContext:
      fsGroup: ${MEDIA_GID}
      fsGroupChangePolicy: "OnRootMismatch"
      supplementalGroups:
        - 100
        - 568
        # Custom Camelus Group(s)
        - 65541
        - 65536
        - 65537
    podLabels:
      setGateway: "false"
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
        labels:
          app.kubernetes.io/name: *app
          app.kubernetes.io/instance: *app
    persistence:
      media:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume1/DataR
        mountPath: /DataR
        readOnly: false
      downloads:
        enabled: true
        type: nfs
        server: "${NAS_ADDRESS}"
        path: /volume3/Data/Downloads
        mountPath: /Downloads
        readOnly: false
      backup:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume3/Data/Backups/app/whisparr
        mountPath: /config/Backups
        readOnly: false
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 2000Mi
