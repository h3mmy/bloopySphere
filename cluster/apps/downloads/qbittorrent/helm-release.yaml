---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: downloads
spec:
  dependsOn:
    - name: vpn-gateway
      namespace: vpn-gateway
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3

  values:
    image:
      repository: ghcr.io/home-operations/qbittorrent
      tag: 4.6.7@sha256:5391f94b321d563c3b44136a5e799b7e4e4888926c1c31d3081a1cf3e74a9aec

    # Adding false for CSRF and Clickjacking else it gives a 401 to browsers and prometheus-exporter (unreliably)
    # This is only okay for my particular use case
    # The 'proper' way to fix the issue would be a tailored traefik middleware
    # I will probably do that at some point, eventually, maybe.
    env:
      TZ: "${TZ}"
      PGID: "${MEDIA_GID}"
      QBT_Preferences__WebUI__CSRFProtection: "false"
      QBT_Preferences__WebUI__ClickjackingProtection: "false"
      # UMASK: "022"
      QBITTORRENT__PORT: &port 8080
      # QBITTORRENT__USE_PROFILE: "true"
      QBITTORRENT__BT_PORT: &port-bt ${VPN_FORWARDED_PORT_1}

    hostname: torrent

    podAnnotations:
      setGateway: "true"
      configmap.reloader.stakater.com/reload: "qbittorrent-config"

    podLabels:
      setGateway: "true"

    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: ${SVC_QBITTORRENT_ADDR}
        loadBalancerIPs: ["${SVC_QBITTORRENT_ADDR}"]
        # For BGP mode
        # externalIPs:
        #   - "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: *port-bt
            protocol: TCP
            targetPort: *port-bt
        externalTrafficPolicy: Local

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-chain-no-auth@kubernetescrd"
          hajimari.io/enable: "true"
          hajimari.io/icon: "download-networ"
          hajimari.io/instance: "bloop-quarky"
          cert-manager.io/cluster-issuer: "letsencrypt-production"
        hosts:
          - host: &host "qbittorrent.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.qbittorrent
            hosts:
              - *host
      api:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-production"
          traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
          traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918@kubernetescrd"
        hosts:
          - host: *host
            paths:
              - path: /api
                pathType: Prefix
        tls:
          - secretName: tls.qbittorrent
            hosts:
              - *host

    persistence:
      cache:
        enabled: true
        type: emptyDir
        mountPath: /config/qBittorrent/cache
      config:
        enabled: true
        existingClaim: qbittorrent-config-v1
      downloads:
        enabled: true
        existingClaim: downloads-torrent-pvc
        mountPath: /data/downloads

    podSecurityContext:
      supplementalGroups:
        - 5600
        - 65539
        - 65537

    resources:
      requests:
        cpu: 200m
        memory: 500Mi
      limits:
        memory: 2500Mi

    metrics:
      enabled: true
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: esanchezm/prometheus-qbittorrent-exporter
          tag: v1.6.0
        env:
          user: "${QB_USER}"
          password: "${QB_PASSWORD}"
