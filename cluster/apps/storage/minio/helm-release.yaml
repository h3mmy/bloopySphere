---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app minio
  namespace: storage
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
      strategy: rollback

  values:
    nameOverride: "minio"
    controllers:
      minio:
        annotations:
          secret.reloader.stakater.com/reload: *app
        containers:
          app:
            image:
              repository: quay.io/minio/minio
              tag: RELEASE.2024-06-06T09-36-42Z
            env:
              TZ: "${TZ}"
              MINIO_UPDATE: "off"
              MINIO_API_CORS_ALLOW_ORIGIN: https://minio.${XYZ_DOMAIN},https://s3.${XYZ_DOMAIN}
              MINIO_ROOT_USER:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: root-user
              MINIO_ROOT_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: root-password
              MINIO_PROMETHEUS_AUTH_TYPE: "public"
              MINIO_PROMETHEUS_URL: "http://prometheus-prometheus.monitoring.svc.cluster.local:9090"
              MINIO_PROMETHEUS_JOB_ID: "minio"
              MINIO_BROWSER_REDIRECT_URL: "https://minio.${XYZ_DOMAIN}"
              MINIO_SERVER_URL: "https://s3.${XYZ_DOMAIN}"
              # MINIO_IDENTITY_OPENID_CONFIG_URL_KEYCLOAK:
              #   valueFrom:
              #     secretKeyRef:
              #       name: minio
              #       key: kc-openid-wellknown-url
              # MINIO_IDENTITY_OPENID_CLIENT_ID_KEYCLOAK:
              #   valueFrom:
              #     secretKeyRef:
              #       name: minio
              #       key: kc-openid-client-id
              # MINIO_IDENTITY_OPENID_CLIENT_SECRET_KEYCLOAK:
              #   valueFrom:
              #     secretKeyRef:
              #       name: minio
              #       key: kc-openid-client-secret
              # MINIO_IDENTITY_OPENID_DISPLAY_NAME_KEYCLOAK: "BloopNet"
              # MINIO_IDENTITY_OPENID_SCOPES_KEYCLOAK:
              #   valueFrom:
              #     secretKeyRef:
              #       name: minio
              #       key: kc-openid-scopes
              # MINIO_IDENTITY_OPENID_CLAIM_NAME_KEYCLOAK:
              #   valueFrom:
              #     secretKeyRef:
              #       name: minio
              #       key: kc-openid-claim-name
              # MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC_KEYCLOAK: "on"
              MINIO_IDENTITY_OPENID_DISPLAY_NAME: "legacy bloopnet"
              MINIO_IDENTITY_OPENID_CONFIG_URL:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-url
              MINIO_IDENTITY_OPENID_CLIENT_ID:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-client-id
              MINIO_IDENTITY_OPENID_CLIENT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-client-secret
              MINIO_IDENTITY_OPENID_CLAIM_NAME:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-claim-name
              MINIO_IDENTITY_OPENID_SCOPES:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-scopes
              MINIO_IDENTITY_OPENID_REDIRECT_URI:
                valueFrom:
                  secretKeyRef:
                    name: minio
                    key: openid-config-callback-uri
              # MINIO_IDENTITY_OPENID_REDIRECT_URI_DYNAMIC_AUTHENTIK: "on"

            args:
              - server
              - /data
              - --console-address
              - :9001

            securityContext:
              runAsUser: 0
              runAsGroup: 0

            resources:
              requests:
                cpu: 77m
                memory: 866M
              limits:
                cpu: 849m
                memory: 1858M
    defaultPodOptions:
      securityContext:
        fsGroup: 65539
        fsGroupChangePolicy: "OnRootMismatch"
        seccompProfile: {type: RuntimeDefault }
        supplementalGroups:
          - 100
          - 101
          - 5600
          # Custom Camelus Group(s)
          - 65541
          - 65540
          - 65539
          - 65537
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: "kubernetes.io/hostname"
                    operator: In
                    values:
                      - k8s-2
                      - k8s-3
                      - k8s-6
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/arch"
                    operator: In
                    values:
                      - amd64
                      - i386
                      - i686
                      - x86

    persistence:
      data:
        enabled: true
        existingClaim: pvc-data-v1
        globalMounts:
          - path: /data
            readOnly: false

    service:
      app:
        controller: minio
        ports:
          http:
            enabled: true
            port: 9001
          s3:
            enabled: true
            port: 9000

    serviceMonitor:
      app:
        serviceName: minio
        endpoints:
          - port: s3
            scheme: http
            path: /minio/v2/metrics/cluster
            interval: 1m
            scrapeTimeout: 10s
            # bearerTokenSecret:
            #   name: minio-prometheus
            #   key: token

    ingress:
      app:
        className: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/instance: "bloop-xyz"
          hajimari.io/enable: "true"
          hajimari.io/icon: "nas"
          hajimari.io/appName: "MinIO"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: networking-chain-no-auth@kubernetescrd
        hosts:
          - host: &host-console "minio.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
          - host: &host-api "s3.${XYZ_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: s3
        tls:
          - secretName: tls.minio
            hosts:
              - *host-console
              - *host-api
