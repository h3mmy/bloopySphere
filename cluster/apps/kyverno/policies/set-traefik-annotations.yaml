# all:
#   - traefik.ingress.kubernetes.io/router.entrypoints: websecure
# external-dns:
#   - cert-manager.io/cluster-issuer: "letsencrypt-production"
#   - external-dns.alpha.kubernetes.io/target: "gw.${SECRET_PUBLIC_DOMAIN}"
# internal (no auth):
#   - traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-internal@kubernetescrd"
# internal-auth: (not used)
#   - traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-internal-auth@kubernetescrd"
# external (no auth):
#   - traefik.ingress.kubernetes.io/router.middlewares: "traefik-system-external@kubernetescrd"
# external-auth:
#   - traefik.ingress.kubernetes.io/router.middlewares: "networking-bloopnet-xyz-auth@kubernetescrd"
---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: update-ingress-annotations
  annotations:
    policies.kyverno.io/title: Update ingress annotations
    policies.kyverno.io/subject: Ingress
    policies.kyverno.io/description: >-
      This policy creates auth annotations on ingresses, external-dns,
      and sets an explicit RFC1918 whitelist for any ingresses
      that are not not exposed to the internet.
spec:
  mutateExistingOnPolicyUpdate: true
  generateExistingOnPolicyUpdate: true
  rules:
    - name: websecure
      match:
        any:
          - resources:
              kinds: ["Ingress"]
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(traefik.ingress.kubernetes.io/router.entrypoints): websecure

    - name: external-dns
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                external-dns.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(cert-manager.io/cluster-issuer): "letsencrypt-production"
              +(external-dns.alpha.kubernetes.io/target): |-
                in.${XYZ_DOMAIN}
    - name: external-auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                auth.home.arpa/enabled: "true"
                external-dns.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(traefik.ingress.kubernetes.io/router.middlewares): |-
                networking-bloopnet-xyz-auth@kubernetescrd
    - name: external-no-auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                external-dns.home.arpa/enabled: "true"
      exclude:
        any:
          - resources:
              annotations:
                auth.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(traefik.ingress.kubernetes.io/router.middlewares): |-
                networking-chain-no-auth@kubernetescrd
    - name: internal-auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
              annotations:
                auth.home.arpa/enabled: "true"
      exclude:
        any:
          - resources:
              annotations:
                external-dns.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(traefik.ingress.kubernetes.io/router.middlewares): |-
                networking-internal-only-auth@kubernetescrd
    - name: internal-no-auth
      match:
        any:
          - resources:
              kinds: ["Ingress"]
      exclude:
        any:
          - resources:
              annotations:
                auth.home.arpa/enabled: "true"
                external-dns.home.arpa/enabled: "true"
      mutate:
        patchStrategicMerge:
          metadata:
            annotations:
              +(traefik.ingress.kubernetes.io/router.middlewares): |-
                networking-rfc1918@kubernetescrd
