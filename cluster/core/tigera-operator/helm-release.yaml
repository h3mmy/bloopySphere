---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: tigera-operator
  namespace: tigera-operator
  labels:
    component.bloopysphere-0/aspect: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://projectcalico.docs.tigera.io/charts
      chart: tigera-operator
      version: &tag v3.31.0
      sourceRef:
        kind: HelmRepository
        name: calico-charts
        namespace: flux-system

  install:
    crds: Create
    remediation: # perform remediation when helm install fails
      retries: 5

  upgrade:
    crds: CreateReplace
    remediation: # perform remediation when helm upgrade fails
      retries: 5
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true

  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true

  values:
    # Image pull secrets to provision for pulling images from private registries.
    # If provided, references to the secrets must also be provided in the installation section.
    imagePullSecrets: {}

    # Configures general installation parameters for Calico. Schema is based
    # on the operator.tigera.io/Installation API documented
    # here: https://projectcalico.docs.tigera.io/reference/installation/api#operator.tigera.io/v1.InstallationSpec
    installation:
      enabled: true
      registry: quay.io
      imagePath: calico
      # Configures Calico networking.
      calicoNetwork:
        # Note: The ipPools section cannot be modified post-install.
        # ALl blocks must fall within the NETWORK_K8S_CLUSTER_CIDR
        bgp: Enabled
        ipPools:
          - blockSize: 20
            cidr: ${NETWORK_K8S_CLUSTER_CIDR}
            encapsulation: VXLANCrossSubnet
            natOutgoing: Enabled
            nodeSelector: all()
          - blockSize: 116
            cidr: ${NETWORK_K8S_SERVICE_CIDR_V6}
            encapsulation: None
            natOutgoing: Enabled
            nodeSelector: all()
        nodeAddressAutodetectionV4:
          cidrs:
            - "${CALICO_NODE_CIDR}"
        nodeAddressAutodetectionV6:
          cidrs:
            - "${CALICO_NODE_CIDR_IPV6}"
        containerIPForwarding: Enabled
      nodeMetricsPort: 9091
      typhaMetricsPort: 9093
      calicoNodeDaemonSet:
        metadata:
          labels:
            goldilocks.fairwinds.com/enabled: "true"
        # spec:
        #   tolerations:
        #     # Make sure {{include "nodeName" . }} gets scheduled on all nodes.
        #     - effect: NoSchedule
        #       operator: Exists
        #     # Mark the pod as a critical add-on for rescheduling.
        #     - key: CriticalAddonsOnly
        #       operator: Exists
        #     - effect: NoExecute
        #       operator: Exists
        #     # - key: "kubernetes.io/arch"
        #     #   operator: "Equal"
        #     #   value: "arm64"
        #     #   effect: "NoSchedule"

    # Configures general installation parameters for Calico. Schema is based
    # on the operator.tigera.io/Installation API documented
    # here: https://projectcalico.docs.tigera.io/reference/installation/api#operator.tigera.io/v1.APIServerSpec
    apiServer:
      enabled: true

    # Certificates for communications between calico/node and calico/typha.
    # If left blank, will be automatically provisioned.
    certs:
      node:
        key:
        cert:
        commonName:
      typha:
        key:
        cert:
        commonName:
        caBundle:

    # Configuration for the tigera operator images to deploy.
    tigeraOperator:
      # datasource=docker depName=tigera/operator
      image: tigera/operator
      version: v1.38.0
      registry: quay.io
      nodeSelector:
        matchExpressions:
          - key: kubernetes.io/hostname
            operator: NotIn
            values:
              - "k8s-0"
    calicoctl:
      image: docker.io/calico/ctl
      tag: *tag

    # Config required to fix RKE2 issue #1541
    # Also see https://docs.rke2.io/known_issues/#calico-with-vxlan-encapsulation
    felixConfiguration:
      featureDetectOverride: "ChecksumOffloadBroken=true"
      ipv6Support: "true"
      nftablesMode: Enabled
      bpfLogLevel: "Off"
      bpfEnabled: "false"
