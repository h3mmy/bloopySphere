---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://prometheus-community.github.io/helm-charts
      chart: kube-prometheus-stack
      version: 44.3.0
      sourceRef:
        kind: HelmRepository
        name: prometheus-community-charts
        namespace: flux-system
      interval: 5m
  timeout: 20m
  install:
    crds: CreateReplace
    disableWait: true
    remediation:
      retries: 7
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 7
  valuesFrom:
    - kind: ConfigMap
      name: prometheus-values
    - kind: ConfigMap
      name: alertmanager-values
  values:
    fullnameOverride: prometheus
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      metricLabelsAllowlist:
        - persistentvolumeclaims=[*]
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    nodeExporter:
      enabled: true
      serviceMonitor:
        https: false
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      tolerations:
        - effect: "NoExecute"
          operator: "Exists"
        - effect: "NoSchedule"
          operator: "Exists"
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 60
              preference:
                matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
                      - i386
                      - i686
                      - x86
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          multicluster:
            etcd:
              enabled: true
    coreDns:
      enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeApiServer:
      enabled: true
    kubeControllerManager:
      enabled: true
      # control-plane-endpoints
      endpoints: ["10.1.0.87", "10.1.0.85", "10.1.0.91"]
      service:
        enabled: true
        port: 10257
        targetPort: 10257
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeProxy:
      # enable true unless using eBPF
      enabled: true
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    kubeEtcd:
      enabled: true
      # control-plane-endpoints
      endpoints: ["10.1.0.87", "10.1.0.85", "10.1.0.91"]
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubeScheduler:
      enabled: true
      # control-plane-endpoints
      endpoints: ["10.1.0.87", "10.1.0.85", "10.1.0.91"]
      serviceMonitor:
        enabled: true
        https: true
        insecureSkipVerify: true
    prometheusOperator:
      createCustomResource: true
    admissionWebhooks:
      certManager:
        enabled: true
