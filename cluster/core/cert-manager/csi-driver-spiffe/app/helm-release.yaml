---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: csi-driver-spiffe
  namespace: cert-manager
  labels:
    component.bloopysphere-0/aspect: iam
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://charts.jetstack.io/
      chart: cert-manager-csi-driver-spiffe
      version: v0.8.2
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
      reconcileStrategy: Revision

  dependsOn:
    - name: cert-manager
      namespace: cert-manager
    - name: tigera-operator
      namespace: tigera-operator

  install:
    crds: Create
    remediation: # perform remediation when helm install fails
      retries: 5

  upgrade:
    crds: CreateReplace
    remediation: # perform remediation when helm upgrade fails
      retries: 5
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true

  rollback:
    timeout: 10m
    recreate: true
    cleanupOnFail: true
  # helm-values schema=https://raw.githubusercontent.com/cert-manager/csi-driver-spiffe/main/deploy/charts/csi-driver-spiffe/values.schema.json
  values:

    image:
      # -- Target image repository.
      repository:
        driver: quay.io/jetstack/cert-manager-csi-driver-spiffe
        approver: quay.io/jetstack/cert-manager-csi-driver-spiffe-approver
        # -- Kubernetes imagePullPolicy on DaemonSet.
      pullPolicy: IfNotPresent

    app:
      # -- Verbosity of cert-manager-csi-driver logging.
      logLevel: 1 # 1-5
      # -- Duration requested for requested certificates.
      certificateRequestDuration: 1h

      # -- The Trust Domain for this driver.
      trustDomain: cluster.local
      # -- The name for the CSI driver installation.
      name: spiffe.csi.cert-manager.io
      issuer:
        # -- Issuer name which is used to serve this Trust Domain.
        name: spiffe-ca
        # -- Issuer kind which is used to serve this Trust Domain.
        kind: ClusterIssuer
        # -- Issuer group which is used to serve this Trust Domain.
        group: cert-manager.io

      # -- Options for CSI driver
      driver:
        # -- Optional file containing a CA bundle that will be propagated to
        # managed volumes.
        sourceCABundle: /var/run/secrets/spiffe.io/ca.pem
        volumeFileName:
          # -- File name which signed certificates are written to in volumes.
          cert: tls.crt
          # -- File name which private keys are written to in volumes.
          key: tls.key
          # -- File name where the CA bundles are written to, if enabled.
          ca: ca.crt
        # -- Optional extra volumes. Useful for mounting root CAs
        volumes:
          - name: root-cas
            secret:
              secretName: csi-driver-spiffe
        # -- Optional extra volume mounts. Useful for mounting root CAs
        volumeMounts:
          - name: root-cas
            mountPath: /var/run/secrets/spiffe.io

        nodeDriverRegistrarImage:
          # -- Target image repository.
          repository: registry.k8s.io/sig-storage/csi-node-driver-registrar
          tag: v2.15.0
          # -- Kubernetes imagePullPolicy on node-driver.
          pullPolicy: IfNotPresent

        livenessProbeImage:
          # -- Target image repository.
          repository: registry.k8s.io/sig-storage/livenessprobe
          # -- Kubernetes imagePullPolicy on liveness probe.
          pullPolicy: IfNotPresent

        livenessProbe:
          # -- The port that will expose the liveness of the csi-driver
          port: 9809

      # -- Options for approver controller
      approver:
        # -- Number of replicas of the approver to run.
        replicaCount: 1
        # -- The signer name that csi-driver-spiffe approver will be given
        # permission to approve and deny. CertificateRequests referencing this
        # signer name can be processed by the SPIFFE approver. See:
        # https://cert-manager.io/docs/concepts/certificaterequest/#approval
        signerName: clusterissuers.cert-manager.io/spiffe-ca
        readinessProbe:
          # -- Container port to expose csi-driver-spiffe-approver HTTP readiness
          # probe on default network interface.
          port: 6060

        metrics:
          # -- Port for exposing Prometheus metrics on 0.0.0.0 on path '/metrics'.
          port: 9402
          # -- Service to expose metrics endpoint.
          service:
            # -- Create a Service resource to expose metrics endpoint.
            enabled: true
            # -- Service type to expose metrics.
            type: ClusterIP
            # -- ServiceMonitor resource for this Service.
            servicemonitor:
              enabled: false
              prometheusInstance: kube-prometheus-stack
              interval: 10s
              scrapeTimeout: 5s
              labels: {}
        resources: {}
        # -- Kubernetes pod resource limits for cert-manager-csi-driver-spiffe approver
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # -- Kubernetes pod memory resource requests for cert-manager-csi-driver-spiffe approver
        # requests:
        #   cpu: 100m
        #   memory: 128Mi
